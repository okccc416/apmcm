MAtlab中返回结果默认保存在ans变量中

；可使每次运算结果都显示
清除命令行clc
清除内存变量clear

pi圆周率  inf无穷大 eps浮点运算的相对精度 NAN不定值    i（j）复数中的虚数单位

#向量与多项式
向量的生成：直接输入法、冒号法和利用MATLAB函数创建三种方法。

直接输入法中，可以用空格和逗号分隔生成行向量，用分号分隔形成列向量。
x=[1,2:3,4]

冒号法
x = first：increment：last 表示创建一个从first开始last结束，数据元素增量为increment的向量

利用linspace创建变量
linspace（first_value,last_value,number）从first开始，last结束，包含number个元素

利用logspace创建对数分割向量，10的n次方
logspace（first_value,last_value,number）

向量的引用
x（n）表示向量中的第n个元素
x（n1：n2）表示向量中的第n1到n2元素

向量的点积运算
dot（a，b）
dot（a，b，dim）

向量的叉积
cross（a，b）
cross（a，b，dim）#dim维度

多项式的构建
直接输入
利用函数poly2sym（p） p为多项式的系数向量

多项式的乘法用conv（p1，p2）来实现，相当于执行两个数组的卷积
多项式的除法用deconv（p1，p2）来实现，相当于执行两个数组的解卷
[k,r]=deconv(p.q)
k返回的函数是多项式p除以q的商，r是余式
[k,r]=deconv(p,q) 相当于p=conv（q，k）+r

由根构造多项式
poly（root）得出p，然后poly2sym（p）得出多项式

多项式的导数运算调用格式为polyder（p）

单元型变量的创建
（1）赋值语句直接定义
{}定义，元素之间用大括号表示
（2）对单元的元素逐个赋值
cell（N）生成一个n*n的置空的单元数组
cell（M*N）或cell（[M*N]） 生成一个m*n阶的置空的单元数组
cell（M,N,P。。。）生成一个m*n*p。。。阶的置空的单元数组
cell（size（A））生成与A同形式的单元型的置空矩阵

cell（C， 'name'）在窗口显示单元型变量的内容的名称为name，不再是传统的ans

cellplot（C， 'legend'）用图形显示单元型变量，并且有图形注释legend

s=struct('field',{},field2',{}...) 表示建立一个空的结构数组，不含数据
s=struct（'field',valuesl,'field2",valuese2...) 表示建立一个具有属性名和数据的结构数组

eval(expression)
[output...outputN] = eval(expression)
expression是指含有有效的MATLAB表达式的字符串，如果需要在表达式中包含数值，
则需要使用函数int2str、num2str 或者sprintf进行转换。outputl...outputN是表达式的输出
sym(p)
p是指数值表达式

Subs(S,old,new)
将old变量替换为new变量，直接计算符号表达式与数值表达式的结果

Digits(D)
设置有效数字个数为D的近似解精度
vpa(S)
符号表达式S在digits函数设置的精度下的数值解
vpa(S,D)
符号表达式s在digits函数设置的有效数字个数为D的近似解精度下的数值解

生成符号矩阵
1.直接输入
直接输入符号矩阵时，符号矩阵的每行都要用方括号括起来，而且要保证同一列的各行元
素字符串的长度相同，因此在较短的字符串中要插入空格来补齐长度，否则程序将会报错
2.用sym函数创建符号矩阵
用这种方法创建符号矩阵，矩阵元素可以是任何不带等号的符号表达式，各矩阵元素之间用
逗号或空格分隔，各行之间用分号分隔，各元素字符串的长度可以不相等。常用的调用格式如
sym('x')    创建变量符号x
sym('a', [n1 .. nM]     创建一个nl-by ..-y-nM符号数组，充满自动生成的元素
sym('A' n)     创建一个nxn符号矩阵，充满自动生成的元素
sym('a', n)    创建一个由n个自动生成的元素组成的符号数组
sym(__, set)   通过set设置符号表达式的格式

3.数值矩阵转化为符号矩阵
在MATLAB中，数值矩阵不能直接参与符号运算，所以必须先转化为符号矩阵。
与数值矩阵一-样，符号矩阵可以进行转置、求逆等运算，但符号矩阵的函数与数值矩阵的函
数不同。本节将进行介绍。
1.符号矩阵的转置运算
符号矩阵的转置运算可以通过符号“”” 或函数transpose来实现，其调用格式如下。
B= A.'
B = transpose (A)
2.符号矩阵的行列式运算
符号矩阵的行列式运算可以通过函数determ或det来实现，其中矩阵必须使用方阵，调用格式
如下。
3.符号矩阵的逆运算
符号矩阵的逆运算可以通过函数inv来实现，其中矩阵必须使用方阵，调用格式如下。
inv (A)
4.符号矩阵的求秩运算
符号矩阵的求秩运算可以通过函数rank来实现，调用格式如下。
rank (A)
5.符号矩阵的常用函数运算
符号矩阵的特征值、 特征向量运算:可以通过函数eig、eigensys 来实现。
符号矩阵的奇异值运算: 可以通过函数 svd、singavals 来实现。
N符号矩阵的若尔当 (Jordan) 标准形运算:可以通过函数jordan来实现。
d=det(A)


符号工具箱中还提供了符号矩阵因式分解、展开、合并、简化及通分等符号操作函数。
1.因式分解
符号矩阵因式分解通过函数factor 来实现，其调用格式如下。.
factor(S)
输入变量S为一-符号矩阵，此函数将因式分解此矩阵的各个元素。
2.符号矩阵的展开
符号多项式的展开可以通过函数expand来实现，其调用格式如下。
expand(S)
对符号矩阵的各元素的符号表达式进行展开。此函数经常用在多项式的表达式中，也常用在
三角函数、指数函数、对数函数的展开中。
3.符号简化
符号简化可以通过函数simple和simplify来实现，其调用格式如wqq
simple (S)
对表达式S尝试多种不同算法进行简化，以显示S表达式的长度最短的简化形式。
若S为一矩阵， 则结果是全矩阵的最短型，而非每个元素的最短型
[r how]=simple(S)
返回的r为简化型，how为简化过程中使用的方法
simplify
简化符号矩阵的每一个元素
4.分式通分
求解符号表达式的分子和分母可以通过函数numden来实现，其调用格式如下。
[n, d]=numden (A)
把A的各元素转换为分子和分母都是整系数的最佳多项式型。
